{"version":3,"file":"use-async-queue.umd.js","sources":["../use-async-queue.js"],"sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react';\n\n/**\n * Hook for managing a queue with limited concurrency.\n * @param {number} concurrency - Maximum number of tasks to process\n * concurrently. Default 8.\n * @param {Function} inflight - Callback for when an item changes from pending\n * to being processed.\n * @param {Function} done - Callback for when an item is finished being\n * processed.\n */\nexport default function useAsyncQueue({\n  concurrency = 8,\n  done = () => {},\n  inflight = () => {},\n}) {\n  if (concurrency < 1) concurrency = Infinity;\n\n  const [numInFlight, setNumInFlight] = useState(0);\n  const [numPending, setNumPending] = useState(0);\n  const [numDone, setNumDone] = useState(0);\n\n  const inFlight = useRef([]);\n  const pending = useRef([]);\n\n  useEffect(() => {\n    while (\n      inFlight.current.length < concurrency &&\n      pending.current.length > 0\n    ) {\n      const task = pending.current.shift();\n      setNumPending((n) => n - 1);\n      inFlight.current.push(task);\n      setNumInFlight((n) => n + 1);\n      inflight(task);\n      const result = task.task();\n      result\n        .then(() => {\n          inFlight.current.pop(task);\n          setNumInFlight((n) => n - 1);\n          setNumDone((n) => n + 1);\n          done({ ...task, result });\n        })\n        .catch(() => {\n          inFlight.current.pop(task);\n          setNumInFlight((n) => n - 1);\n          setNumDone((n) => n + 1);\n          done({ ...task, result });\n        });\n    }\n  }, [concurrency, done, inflight, numPending, numInFlight]);\n\n  const add = useCallback(\n    (task) => {\n      pending.current.push(task);\n      setNumPending((n) => n + 1);\n    },\n    [pending]\n  );\n\n  return { add, numInFlight, numPending, numDone };\n}\n"],"names":["concurrency","Infinity","useState","inFlight","useRef","pending","useEffect","task","current","shift","setNumPending","n","push","setNumInFlight","inflight","result","then","pop","setNumDone","done","Object","catch","length","numPending","numInFlight","useCallback","numDone"],"mappings":"qNAWe,+CACC,2FAIVA,EAAc,IAAGA,EAAcC,gBAEGC,WAAS,mBACXA,WAAS,mBACfA,WAAS,iBAEjCC,EAAWC,SAAO,IAClBC,EAAUD,SAAO,WAEvBE,gDAKUC,EAAOF,EAAQG,QAAQC,QAC7BC,WAAeC,UAAMA,EAAI,IACzBR,EAASK,QAAQI,KAAKL,GACtBM,WAAgBF,UAAMA,EAAI,IAC1BG,EAASP,OACHQ,EAASR,EAAKA,OACpBQ,EACGC,gBACCb,EAASK,QAAQS,IAAIV,GACrBM,WAAgBF,UAAMA,EAAI,IAC1BO,WAAYP,UAAMA,EAAI,IACtBQ,EAAKC,iBAAKb,UAAMQ,OAEjBM,iBACClB,EAASK,QAAQS,IAAIV,GACrBM,WAAgBF,UAAMA,EAAI,IAC1BO,WAAYP,UAAMA,EAAI,IACtBQ,EAAKC,iBAAKb,UAAMQ,QApBpBZ,EAASK,QAAQc,OAAStB,GAC1BK,EAAQG,QAAQc,OAAS,QAsB1B,CAACtB,EAAamB,EAAML,EAAUS,EAAYC,IAUtC,KARKC,uBACTlB,GACCF,EAAQG,QAAQI,KAAKL,GACrBG,WAAeC,UAAMA,EAAI,KAE3B,CAACN,gBAGWmB,aAAaD,UAAYG"}